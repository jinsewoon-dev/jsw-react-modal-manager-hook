{"version":3,"sources":["../src/context/ModalProvider.tsx","../src/hooks/useModalManager.ts","../src/lib/generateUniqueId.ts","../src/layouts/BasicModalContainer.tsx"],"sourcesContent":["import React, { createContext, CSSProperties } from \"react\";\n\nimport { useContext } from \"react\";\nimport { useModalManager } from \"../hooks/useModalManager\";\nimport { BasicModalContainer } from \"../layouts/BasicModalContainer\";\nimport { ModalManagerInterface, ModalStateConfing } from \"../types\";\n\n// Context 생성\nconst ModalContext = createContext<any>(null);\nexport type ModalProviderProps = {\n  children: React.ReactNode;\n  customModalContainer?: React.ReactNode;\n  initialConfig?: ModalStateConfing;\n};\nexport const INITIAL_MODAL_CONFIG = {\n  baseZindex: 10000,\n  useDim: true,\n  allowDimClickClose: true,\n  allowBackgroundScroll: true,\n  dimBackgroundColor: \"rgba(0,0,0,0.5)\",\n  cleanupDelay: 300,\n};\n\nexport const ModalProvider = ({\n  children,\n  customModalContainer,\n  initialConfig = INITIAL_MODAL_CONFIG,\n}: ModalProviderProps) => {\n  const { modals, openModal, closeModal, closeAllModals } = useModalManager(\n    initialConfig.cleanupDelay ?? INITIAL_MODAL_CONFIG.cleanupDelay\n  );\n\n  return (\n    <ModalContext.Provider\n      value={{ modals, openModal, closeModal, closeAllModals }}\n    >\n      {customModalContainer ?? (\n        <BasicModalContainer\n          initialConfig={{\n            useDim: initialConfig.useDim ?? INITIAL_MODAL_CONFIG.useDim,\n            allowDimClickClose:\n              initialConfig.allowDimClickClose ??\n              INITIAL_MODAL_CONFIG.allowDimClickClose,\n            allowBackgroundScroll:\n              initialConfig.allowBackgroundScroll ??\n              INITIAL_MODAL_CONFIG.allowBackgroundScroll,\n            dimBackgroundColor:\n              initialConfig.dimBackgroundColor ??\n              INITIAL_MODAL_CONFIG.dimBackgroundColor,\n            baseZindex:\n              initialConfig.baseZindex ?? INITIAL_MODAL_CONFIG.baseZindex,\n          }}\n        />\n      )}\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\n// Context를 쉽게 사용할 수 있는 커스텀 훅\nexport const useModal = () => {\n  const context = useContext(ModalContext) as ModalManagerInterface;\n  if (!context) {\n    throw new Error(\"useModal must be used within a ModalProvider\");\n  }\n  return context;\n};\n","import React, { useCallback, useState, useRef, useEffect } from \"react\";\nimport { generateUniqueId } from \"../lib/generateUniqueId\";\nimport {\n  ModalManagerInterface,\n  ModalManagerState,\n  OpenModalOptions,\n} from \"../types\";\nimport { INITIAL_MODAL_CONFIG } from \"../context/ModalProvider\";\n\n/**\n * useModalManager 훅: 모달 관리 기능을 제공\n * @param cleanupDelay 모달 제거 전 지연 시간 (ms)\n * @returns 모달 상태 및 관리 함수\n */\nexport const useModalManager = (\n  cleanupDelay: number = 0\n): ModalManagerInterface => {\n  const [modals, setModals] = useState<ModalManagerState>([]); // 현재 모달 상태\n  const timeoutRefs = useRef<Record<string, NodeJS.Timeout>>({}); // 타이머 참조 저장소\n\n  /**\n   * 모달 열기\n   * @param component 렌더링할 React 컴포넌트\n   * @param options 모달 옵션 (ID, onClose 콜백)\n   */\n  const openModal = useCallback(\n    (component: React.ReactNode, options?: OpenModalOptions) => {\n      const id = generateUniqueId();\n      const onClose = options?.onClose; // 닫힘 시 실행할 콜백\n\n      // 모달 컴포넌트에 onClose를 props로 전달\n      const clonedComponent = React.cloneElement(\n        component as React.ReactElement,\n        { onClose }\n      );\n\n      // 모달 상태 업데이트\n      setModals((prev) => [\n        ...prev,\n        {\n          id,\n          component: clonedComponent,\n          isVisible: true,\n          config: {\n            useDim: options?.useDim ?? INITIAL_MODAL_CONFIG.useDim,\n            allowDimClickClose:\n              options?.allowDimClickClose ??\n              INITIAL_MODAL_CONFIG.allowDimClickClose,\n            allowBackgroundScroll:\n              options?.allowBackgroundScroll ??\n              INITIAL_MODAL_CONFIG.allowBackgroundScroll,\n          },\n          onClose,\n        },\n      ]);\n    },\n    []\n  );\n\n  /**\n   * 마지막 모달 닫기\n   */\n  const closeModal = useCallback(() => {\n    setModals((prev) => {\n      if (prev.length === 0) return prev; // 닫을 모달이 없으면 종료\n\n      // 마지막 모달을 닫기\n      const updatedModals = prev.map((modal, index) => {\n        if (index === prev.length - 1) {\n          return { ...modal, isVisible: false };\n        }\n        return modal;\n      });\n\n      // cleanupDelay에 따라 DOM에서 모달 제거\n      if (cleanupDelay > 0) {\n        const lastModalId = prev[prev.length - 1]?.id;\n        if (lastModalId) {\n          timeoutRefs.current[lastModalId] = setTimeout(() => {\n            setModals((current) =>\n              current.filter((modal) => modal.id !== lastModalId)\n            );\n            delete timeoutRefs.current[lastModalId];\n          }, cleanupDelay);\n        }\n      } else {\n        // 즉시 DOM에서 제거\n        return updatedModals.filter(\n          (_, index) => index !== updatedModals.length - 1\n        );\n      }\n\n      return updatedModals;\n    });\n  }, [cleanupDelay]);\n\n  /**\n   * 모든 모달 닫기\n   */\n  const closeAllModals = useCallback(() => {\n    setModals((prev) => prev.map((modal) => ({ ...modal, isVisible: false })));\n\n    // cleanupDelay에 따라 모든 모달 제거\n    if (cleanupDelay > 0) {\n      setTimeout(() => {\n        setModals([]); // 모든 모달 상태 제거\n      }, cleanupDelay);\n    } else {\n      setModals([]); // 즉시 제거\n    }\n  }, [cleanupDelay]);\n\n  /**\n   * 컴포넌트 언마운트 시 모든 타이머 정리\n   */\n  useEffect(() => {\n    return () => {\n      Object.keys(timeoutRefs.current).forEach((id) => {\n        clearTimeout(timeoutRefs.current[id]);\n      });\n    };\n  }, []);\n\n  return { modals, openModal, closeModal, closeAllModals };\n};\n","/**\n * 고유한 ID(UUID)를 생성합니다.\n *\n * @returns {string} 생성된 고유 ID(UUID).\n *\n * @example\n * // 고유 ID 생성\n * const uniqueId = generateUniqueId();\n * console.log(uniqueId); // 출력: \"550e8400-e29b-41d4-a716-446655440000\" (예시)\n */\nexport const generateUniqueId = () => {\n  return crypto.randomUUID();\n};\n","import { CSSProperties } from \"react\";\nimport { useModal } from \"../context/ModalProvider\";\nimport styles from \"./BasicModalContainer.module.css\";\nimport { BaseModalConfig } from \"../types\";\n\ninterface BasicModalContainerProps {\n  initialConfig: BaseModalConfig & {\n    baseZindex: number;\n    dimBackgroundColor: CSSProperties[\"backgroundColor\"];\n  };\n}\n\nexport const BasicModalContainer = ({\n  initialConfig,\n}: BasicModalContainerProps) => {\n  const { modals, closeModal } = useModal();\n\n  return (\n    <>\n      {modals.map((modal, index) => (\n        <div\n          key={modal.id}\n          className={`${modal.isVisible ? styles.fadeIn : styles.fadeOut}`} // `modal.isVisible`로 애니메이션 클래스 적용\n          style={{\n            position: \"fixed\",\n            inset: 0,\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            backgroundColor: modal.config.useDim\n              ? initialConfig.dimBackgroundColor\n              : \"transparent\",\n            zIndex: initialConfig.baseZindex + index,\n            pointerEvents: modal.isVisible ? \"auto\" : \"none\", // 닫히는 동안 클릭 차단\n          }}\n          onClick={(e) =>\n            //조건부 오버레이 클릭 시 모달 닫기\n            modal.config.allowDimClickClose ?? initialConfig.allowDimClickClose\n              ? closeModal()\n              : e.preventDefault()\n          }\n        >\n          <div\n            style={{\n              pointerEvents: modal.isVisible ? \"auto\" : \"none\",\n            }}\n            onClick={(e) => e.stopPropagation()} // 클릭 이벤트 버블링 방지\n          >\n            {modal.component}\n          </div>\n        </div>\n      ))}\n    </>\n  );\n};\n"],"mappings":"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","names":["createContext","useContext","React","useCallback","useState","useRef","useEffect","generateUniqueId","useModalManager","cleanupDelay","modals","setModals","useState","timeoutRefs","useRef","openModal","useCallback","component","options","id","generateUniqueId","onClose","clonedComponent","React","prev","INITIAL_MODAL_CONFIG","closeModal","updatedModals","modal","index","lastModalId","current","_","closeAllModals","useEffect","jsx","jsxs","ModalContext","createContext","INITIAL_MODAL_CONFIG","ModalProvider","children","customModalContainer","initialConfig","modals","openModal","closeModal","closeAllModals","useModalManager","BasicModalContainer","useModal","context","useContext","styles","Fragment","jsx","BasicModalContainer","initialConfig","modals","closeModal","useModal","modal","index","e"]}